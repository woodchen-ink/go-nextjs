name: 构建并推送Docker镜像

on:
  push:
    # branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Go环境
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: 构建后端
      run: |
        go mod download
        # 编译x86_64版本
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -tags timetzdata -o go-nextjs-backend-amd64 .
        # 编译arm64版本
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-w -s" -tags timetzdata -o go-nextjs-backend-arm64 .

    - name: 构建前端
      run: |
        cd web
        # 安装依赖并构建（使用standalone模式）
        npm ci
        npm run build
        # 检查standalone构建文件是否生成成功
        if [ ! -d ".next/standalone" ]; then
          echo "Next.js standalone构建失败，缺少standalone目录"
          exit 1
        fi

    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 登录到Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: 构建并推送Docker镜像
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/go-nextjs:latest
        # 添加构建参数
        build-args: |
          BUILD_DATE=${{ github.event.repository.updated_at }}
          VCS_REF=${{ github.sha }}
    - name: 部署到服务器
      uses: appleboy/ssh-action@master
      env:
        DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/go-nextjs:latest
        PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
      with:
        host: ${{ secrets.SERVER_IP }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        envs: DOCKER_IMAGE,PROJECT_PATH
        script: |
          docker pull $DOCKER_IMAGE
          cd $PROJECT_PATH
          docker compose down
          docker compose up -d